#! /bin/sh

#:0.1.0:2013-07-15:go2null
# * Initial release
#:0.2.0:2013-07-18:go2null
# * Started to add support for multiple desktop managers
# * Added .desktop file
#:0.3.0:2013-07-22:go2null
# * Fixed NEXT, PREV and RANDOM options
# *   (RANDOM does not support NEXT and PREV)
# * Added support for START, STOP and RESTART

# ** inspirations ** #
# http://ubuntuforums.org/showthread.php?t=2076417
# http://www.pclinuxos.com/forum/index.php?topic=87784.0

# ** USER SETTINGS ** #
# directories to use
DIR_1="~/Wallpaper/"
DIR_2='/home/Public/Pictures'
DIR_3='/usr/share/backgrounds'
DIR_4='/usr/share/lxde/wallpapers'
# how often to change wallpaper
INTERVAL='5m'
# use a random image?
RANDOM=0

# ** command-line overrides ** #
while [ $# -gt 0 ]; do
	case "$1" in
		r|R|random|RANDOM)				 RANDOM=1         ;;
		n|N|next|NEXT)					 ACTION='NEXT'    ;;
		p|P|prev|PREV|previous|PREVIOUS) ACTION='PREV'    ;;
		start|START)                     ACTION='START'   ;;
		stop|STOP)                       ACTION='STOP'    ;;
		restart|RESTART)                 ACTION='RESTART' ;;
		*)	[ -f "$1" ]               && ACTION=$1        ;;
	esac
	shift
done
[ -z "$ACTION" ] && ACTION='START'

# ** get PID if already running ** #
# https://bbs.archlinux.org/viewtopic.php?id=77395
PID=$(pgrep -c -f "/bin/sh $0")

# ** execute START/STOP/RESTART actions ** #
([ "$ACTION" = "START" ] && [ "$PID" -gt 0 ]) && exit
(([ "$ACTION" = "STOP" ] || [ "$ACTION" = "RESTART" ]) && [ "$PID" -gt 0 ]) && kill -9 $PID
[ "$ACTION" = "STOP" ] && exit

# ** generate file list, only on START, or if it doesn't exist ** #
WP_LIST=/tmp/$(basename -s -sh "$0").lst
if [ "$ACTION" = "START" ] || [ ! -f "$WP_LIST" ]; then
	rm -f "$WP_LIST"
	COUNTER=1
	while true; do
		eval "DIR=\$DIR_$COUNTER"
		[ -z "$DIR" ] && break
		[ -d "$DIR" ] && find "$DIR" -type f >> "$WP_LIST"
		COUNTER=$(($COUNTER+1))
	done
fi

# ** get desktop manager ** #
DM='PCMANFM'
DM_SET_WP='pcmanfm --set-wallpaper'

setWallpaper() {
	$DM_SET_WP "$WP_NEW"
	echo Wallpaper set to: $WP_NEW
	WP_CURRENT=$WP_NEW
}

# ** process specified file action ** #
[ -f "$ACTION" ] && WP_NEW=$ACTION

getCurrentWallpaper() {
# ** get current wallpaper ** #
	case "$DM" in
	PCMANFM)
		##   the following works if same wallpaper is used on all desktops
		##   this is controlled by "wallpaper_common=1"
		WP_CURRENT=$(grep -h "^wallpaper=" ~/.config/pcmanfm/lubuntu/pcmanfm.conf | cut -d = -f 2)
		[ -z $WP_CURRENT ] && WP_CURRENT=$(grep -h "^wallpaper0=" ~/.config/pcmanfm/lubuntu/pcmanfm.conf | cut -d = -f 2)
		;;
	esac
}

getNextWallpaper() {
	WP_NEW=$(grep -FA 1 "$WP_CURRENT" "$WP_LIST" | grep -v "$WP_CURRENT")
	[ -z "$WP_NEW" ] && WP_NEW=$(head -1 "$WP_LIST")
}

getPrevWallpaper() {
	WP_NEW=$(grep -FB 1 "$WP_CURRENT" "$WP_LIST" | grep -v "$WP_CURRENT")
	[ -z "$WP_NEW" ] && WP_NEW=$(tail -1 "$WP_LIST")
}

# ** process NEXT/PREV actions ** #
if [ "$ACTION" = "NEXT" ] || [ "$ACTION" = "PREV" ]; then
	getCurrentWallpaper
	if   [ "$ACTION" = "NEXT" ]; then
		getNextWallpaper
	else [ "$ACTION" = "PREV" ]; then
		getPrevWallpaper
	fi
fi

# ** execute file/NEXT/PREV actions ** #
if [ ! -z "$WP_NEW" ]; then
	setWallaper
    exit
fi

# ** rotate ** #
while true; do
	case "$ROTATE" in
		N) getNextWallpaper ;;
		P) getPrevWallpaper ;;
		R) WP_NEW=$(shuf -n1 < "$WP_LIST") ;;
	esac
	setWallpaper
	sleep $INTERVAL
done
