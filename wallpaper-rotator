#!/bin/sh

VERSION=0.1.0:2013-07-15:go2null
# * Initial release
VERSION=0.2.0:2013-07-18:go2null
# * Started to add support for multiple desktop managers
# * Added .desktop file
VERSION=0.3.0:2013-07-22:go2null
# * Fixed NEXT, PREV and RANDOM options
# *   (RANDOM does not support NEXT and PREV)
# * Added support for START, STOP and RESTART
VERSION=0.3.1:2013-07-25:go2null
# * Fixed syntax and typo bugs
# * Fixed bug prevent normal operation
VERSION=0.3.2:2013-07-25:go2null
# * Fix: Random now works correctly
VERSION=0.3.3:2013-08-16:go2null
# * MOD: code cleanup
VERSION=0.4.0:2013-08-18:go2null
# * NEW: INSTALL option
# * NEW: HELP option
# * FIX: always use /bin/kill, not bash's built-in kill

# ** inspirations ** #
# http://ubuntuforums.org/showthread.php?t=2076417
# http://www.pclinuxos.com/forum/index.php?topic=87784.0

# ** USER SETTINGS ** #
# directories to use
DIR_1="~/Wallpaper/"
DIR_2='/home/Public/Pictures/'
DIR_3='/usr/share/backgrounds/'
DIR_4='/usr/share/lxde/wallpapers/'
# how often to change wallpaper
INTERVAL='1m'
# uncomment to use a random image
#RANDOM=RANDOM

# ** HELPER FUNCTIONS ** #
printHelp() {
	echo "VERSION: $VERSION
USAGE:
	"$0" [OPTIONS]
OPTIONS
	* install [random] [start|restart]
	* start|restart [random]
	* stop
	* next|prev|random|<full-path-to-image>
	* help
"
}

killPIDs() {
	[ "$1" = "keep1" ] && { shift 2; } # 2>/dev/null; }
	[ -n "$1" ] && { /bin/kill -9 $*; }
}

getDM() {
# ** get desktop manager ** #
	DM='PCMANFM'
	DM_SET_WP='pcmanfm --set-wallpaper'
}

getCurrentWallpaper() {
# ** get current wallpaper ** #
	case "$DM" in
	PCMANFM)
		##   the following works if same wallpaper is used on all desktops
		##   this is controlled by "wallpaper_common=1"
		WP_CURRENT=$(grep -h "^wallpaper=" ~/.config/pcmanfm/lubuntu/pcmanfm.conf | cut -d = -f 2)
		[ -z $WP_CURRENT ] && WP_CURRENT=$(grep -h "^wallpaper0=" ~/.config/pcmanfm/lubuntu/pcmanfm.conf | cut -d = -f 2)
		;;
	esac
}

getNextWallpaper() {
	WP_NEW=$(grep -FA 1 "$WP_CURRENT" "$WP_LIST" | grep -v "$WP_CURRENT")
	[ -z "$WP_NEW" ] && WP_NEW=$(head -1 "$WP_LIST")
}

getPrevWallpaper() {
	WP_NEW=$(grep -FB 1 "$WP_CURRENT" "$WP_LIST" | grep -v "$WP_CURRENT")
	[ -z "$WP_NEW" ] && WP_NEW=$(tail -1 "$WP_LIST")
}

setWallpaper() {
	$DM_SET_WP "$WP_NEW"
	echo "Wallpaper set to: $WP_NEW"
	WP_CURRENT=$WP_NEW
}

# ** PROCESS INPUTS ** #
# command-line overrides
while [ $# -gt 0 ]; do
	case "$1" in
		install|INSTALL)                 INSTALL='INSTALL' ;;
		r|R|random|RANDOM)				 RANDOM='RANDOM'   ;;
		n|N|next|NEXT)					 ACTION='NEXT'     ;;
		p|P|prev|PREV|previous|PREVIOUS) ACTION='PREV'     ;;
		start|START)                     ACTION='START'    ;;
		stop|STOP)                       ACTION='STOP'     ;;
		restart|RESTART)                 ACTION='RESTART'  ;;
		*) [ -f "$1" ] && { ACTION=$1; } || { printHelp; exit; } ;; # stop at unknown option
	esac
	shift
done
# validate and init variiables
[ -z "$RANDOM"  ] || { [ "$RANDOM"  != "RANDOM"  ] && unset RANDOM;   }
[ -z "$INSTALL" ] || { [ "$INSTALL" != "INSTALL" ] && unset INSTALL;  }
# set default action, if none specified
([ -z "$INSTALL" ] && [ -z "$ACTION" ]) && { [ -n "$RANDOM" ] && ACTION='RANDOM' || ACTION='START'; }

# ** execute START/STOP/RESTART actions ** #
# get PID if already running
#   https://bbs.archlinux.org/viewtopic.php?id=77395
#   http://stackoverflow.com/questions/15740481/prevent-process-from-killing-itself-using-pkill
PIDs=$(pgrep -fx ".*sh.*wallpaper-rotator" | grep -v ^$$\$)
if [ -n "$PIDs" ]; then
	([ -z "$INSTALL" ] && [ "$ACTION" = "START" ]) && { killPIDs 'keep1' $PIDs; exit; }
	([ -n "$INSTALL" ] || [ "$ACTION" = "STOP" ] || [ "$ACTION" = "RESTART" ]) && { killPIDs $PIDs; } 
fi
[ "$ACTION" = "STOP"    ] && exit
[ "$ACTION" = "RESTART" ] && ACTION='START' # simplifies checks later

# ** get Desktop specific commands ** #
getDM

# ** execute INSTALL action ** #
if [ -n "$INSTALL" ]; then
	# get autostart directory
	case "$DM" in
		PCMANFM)
			DESKTOP=$HOME/.config/autostart	
			;;
	esac
	# set desktop file target
	DESKTOP="$DESKTOP/$(basename $0).desktop"
	# create desktop file
	cat <<EOF > "$DESKTOP"
[Desktop Entry]
Encoding=UTF-8
Type=Application
Name=Wallpaper Rotator
Name[en_US]=Wallpaper Rotator
Icon=wallpaper
Exec=$0 $RANDOM
Comment[en_US]=Rotates wallpapers sequentially or randomly
StartupNotify=true
Version=1.0
Terminal=false
Categories=Utility;
EOF
	chmod a+x "$DESKTOP"
	[ "$ACTION" = "INSTALL" ] && exit
fi

# ** generate file list, only on START, or if it doesn't exist ** #
WP_LIST=/tmp/$(basename -s '.sh' "$0").lst
if [ "$ACTION" = "START" ] || [ ! -f "$WP_LIST" ]; then
	rm -f "$WP_LIST"
	COUNTER=1
	while true; do
		eval "DIR=\$DIR_$COUNTER"
		[ -z "$DIR" ] && break  # stop of 1st empty
		[ -d "$DIR" ] && find "$DIR" -type f >> "$WP_LIST" # get files in dir and subdirs
		COUNTER=$(($COUNTER+1))
	done
fi

# ** execute file/NEXT/PREV/RANDOM actions ** #
# get file to use
if   [ -f "$ACTION"         ]; then { WP_NEW=$ACTION;                        }
elif [ "$ACTION" = "RANDOM" ]; then { WP_NEW=$(shuf -n1 < "$WP_LIST");       }
elif [ "$ACTION" = "NEXT"   ]; then { getCurrentWallpaper; getNextWallpaper; }
elif [ "$ACTION" = "PREV"   ]; then { getCurrentWallpaper; getPrevWallpaper; }
fi
# set wallpaper
[ -n "$WP_NEW" ] && { setWallpaper; exit; }

# ** rotate ** #
while true; do
	[ -n "$RANDOM" ] && { WP_NEW=$(shuf -n1 < "$WP_LIST"); } || { getNextWallpaper; }
	setWallpaper
	sleep $INTERVAL
done
